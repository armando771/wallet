{"version":3,"sources":["actions/index.js","pages/Login.js","components/Header.js","components/FormComponents/Currency.js","components/FormComponents/Description.js","components/FormComponents/Method.js","components/FormComponents/Value.js","components/FormComponents/Tag.js","components/FormWallet.js","components/SubmitButton.js","components/TableExpend.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/store.js","index.js"],"names":["actionExpenses","state","type","actionFailExpenses","error","Login","props","handleChange","bind","verifyInputs","email","password","disabled","target","name","value","this","setState","test","length","userEmail","className","data-testid","placeholder","onChange","to","onClick","React","Component","connect","dispatch","e","Header","sumAllExpenses","InputCurrency","currency","coin","htmlFor","id","map","c","index","key","InputDescription","description","InputMethod","method","InputValue","InputTag","tag","FormWallet","SubmitButton","OnbuttonSubmitExpense","expenses","wallet","remove","head","scope","expense","exchangeRates","ask","realName","split","newAsk","parseFloat","toFixed","coversao","Wallet","fetchAPIcoins","result","arr","exp","push","reduce","acc","initial","buttonSubmitExpense","a","fetch","getapi","json","getjson","filteredCoin","Object","keys","filter","includes","user","getAPI","getJson","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","action","currencies","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2c3c9568.chunk.js","sourcesContent":["// Coloque aqui suas actions\nexport const EMAIL_ACTION = 'EMAIL_ACTION';\nexport const actionLog = (email) => ({ type: EMAIL_ACTION, email });\n\nexport const EXPENSES = 'EXPENSES';\nexport const actionExpenses = (state) => ({ type: EXPENSES, state });\n\nexport const FAIL_EXPENSES = 'FAIL_EXPENSES';\nexport const actionFailExpenses = (error) => ({ type: FAIL_EXPENSES, error });\n\nexport const fetchAPIExpenses = (state) => async (dispatch) => {\n  const URL = 'https://economia.awesomeapi.com.br/json/all';\n  const getAPI = await fetch(URL);\n  const getJson = await getAPI.json();\n  if (!getJson) return dispatch(actionFailExpenses);\n  dispatch(actionExpenses({ ...state, exchangeRates: getJson }));\n};\n\n\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const deleteExpense = (state) => ({ type: DELETE_EXPENSE, state });","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actionLog } from '../actions/index';\nimport \"../styles/login.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.verifyInputs = this.verifyInputs.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true,\n    };\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value }, () => this.verifyInputs());\n  }\n\n  /* Logica usada de refencia do website https://cursos.alura.com.br/forum/topico-como-validar-email-e-senha-em-javascript-80469 */\n\n  verifyInputs() {\n    const { email, password } = this.state;\n    const number = 5;\n    const Regex = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$/;\n    const disabled = !(Regex.test(email) && password.length > number);\n    this.setState({ disabled });\n  }\n\n  render() {\n    const { email, password, disabled } = this.state;\n    const { userEmail } = this.props;\n    return (\n      <div className=\"login-container\">\n          <h1>Conversion Wallet</h1> \n          <h2>Faça seu login abaixo:</h2>\n         <form className=\"form-login-container\">\n          <input\n            type=\"email\"\n            data-testid=\"email-input\"\n            placeholder=\"Seu Email:\"\n            name=\"email\"\n            value={ email }\n            onChange={ this.handleChange }\n            className=\"inputs\"\n          />\n          <input\n            type=\"password\"\n            data-testid=\"password-input\"\n            placeholder=\"Sua Senha:\"\n            name=\"password\"\n            value={ password }\n            onChange={ this.handleChange }\n            className=\"inputs\"\n          />\n          <Link to=\"/carteira\" onClick={ () => userEmail({ email }) }>\n            <button\n              type=\"button\"\n              disabled={ disabled }\n            >\n              Entrar\n            </button>\n          </Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  userEmail: (e) => dispatch(actionLog(e)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  userEmail: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/header.css';\n\nfunction Header(props) {\n  const { userEmail, sumAllExpenses } = props;\n  return (\n    <div className=\"header-container\">\n      <span data-testid=\"email-field\">\n        { userEmail }\n      </span>\n      <p data-testid=\"total-field\"> Despesa Total: R$ { sumAllExpenses() }</p>\n      {/* <p data-testid=\"header-currency-field\">BRL:</p> */}\n    </div>\n  );\n}\n\nexport default Header;\n\nHeader.propTypes = {\n  userEmail: PropTypes.func.isRequired,\n  sumAllExpenses: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../../styles/wallet.css';\n\nfunction InputCurrency(props) {\n  const { currency, handleChange, coin } = props;\n  return (\n    <form>\n      <label htmlFor=\"Moeda\">\n        Moeda\n        <select\n          id=\"Moeda\"\n          value={ currency }\n          name=\"currency\"\n          onChange={ handleChange }\n          className=\"inputs-wallet\"\n        >\n          {coin.map((c, index) => (\n            <option\n              value={ c }\n              key={ index }\n            >\n              { c }\n            </option>\n          )) }\n        </select>\n      </label>\n    </form>\n  );\n}\n\nInputCurrency.propTypes = {\n  coin: PropTypes.func,\n  currency: PropTypes.string,\n  handleChange: PropTypes.func,\n}.isRequired;\n\nexport default InputCurrency;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../../styles/wallet.css';\n\nfunction InputDescription(props) {\n  const { description, handleChange } = props;\n  return (\n    <form>\n      <label htmlFor=\"Descrição\">\n        Descrição\n        <input\n          id=\"Descrição\"\n          type=\"text\"\n          value={ description }\n          name=\"description\"\n          onChange={ handleChange }\n          className=\"inputs-wallet\"\n        />\n      </label>\n    </form>\n  );\n}\n\nInputDescription.propTypes = {\n  description: PropTypes.func,\n  handleChange: PropTypes.string,\n}.isRequired;\n\nexport default InputDescription;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../../styles/wallet.css';\n\nfunction InputMethod(props) {\n  const { method, handleChange } = props;\n  return (\n    <form>\n      <label htmlFor=\"Método de pagamento\">\n        Método de pagamento\n        <select\n          id=\"Método de pagamento\"\n          value={ method }\n          name=\"method\"\n          onChange={ handleChange }\n          className=\"inputs-wallet\"\n        >\n          <option>{null}</option>\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n      </label>\n    </form>\n  );\n}\n\nInputMethod.propTypes = {\n  handleChange: PropTypes.func,\n  method: PropTypes.string,\n}.isRequired;\n\nexport default InputMethod;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../../styles/wallet.css';\n\nfunction InputValue(props) {\n  const { value, handleChange } = props;\n  return (\n    <form>\n      <label htmlFor=\"Valor\">\n        Valor\n        <input\n          id=\"Valor\"\n          type=\"text\"\n          value={ value }\n          name=\"value\"\n          onChange={ handleChange }\n          className=\"inputs-wallet\"\n        />\n      </label>\n    </form>\n  );\n}\n\nInputValue.propTypes = {\n  handleChange: PropTypes.func,\n  value: PropTypes.string,\n}.isRequired;\n\nexport default InputValue;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../../styles/wallet.css';\n\nfunction InputTag(props) {\n  const { tag, handleChange } = props;\n  return (\n    <form>\n      <label htmlFor=\"Tag\">\n        Tag\n        <select id=\"Tag\" value={ tag } name=\"tag\" onChange={ handleChange } className=\"inputs-wallet\">\n          <option>{null}</option>\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Transporte</option>\n          <option>Saúde</option>\n        </select>\n      </label>\n    </form>\n  );\n}\n\nInputTag.propTypes = {\n  handleChange: PropTypes.func,\n  tag: PropTypes.string,\n}.isRequired;\n\nexport default InputTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputCurrency from './FormComponents/Currency';\nimport InputDescription from './FormComponents/Description';\nimport InputMethod from './FormComponents/Method';\nimport InputValue from './FormComponents/Value';\nimport InputTag from './FormComponents/Tag';\nimport '../styles/wallet.css';\n\nfunction FormWallet(props) {\n  const { coin, value, description, currency, handleChange, method, tag } = props;\n  return (\n    <form className=\"form-wallet-container\" >\n      <InputValue value={ value } handleChange={ handleChange } />\n      <InputDescription description={ description } handleChange={ handleChange } />\n      <InputMethod method={ method } handleChange={ handleChange } />\n      <InputTag tag={ tag } handleChange={ handleChange } />\n      <InputCurrency currency={ currency } handleChange={ handleChange } coin={ coin } />\n    </form>\n  );\n}\n\nexport default FormWallet;\n\nFormWallet.propTypes = {\n  coin: PropTypes.func,\n  value: PropTypes.string,\n  description: PropTypes.string,\n  currency: PropTypes.string,\n  handleChange: PropTypes.func,\n  method: PropTypes.string,\n  tag: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../styles/wallet.css';\n\nfunction SubmitButton(props) {\n  const { OnbuttonSubmitExpense } = props;\n  return (\n    <div className=\"button-wallet\">\n      <button\n      type=\"button\"\n      onClick={ OnbuttonSubmitExpense }\n    >\n      Adicionar despesa\n    </button>\n    </div>\n  );\n}\n\nSubmitButton.propTypes = {\n  OnbuttonSubmitExpense: PropTypes.func,\n}.isRequired;\n\nexport default SubmitButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteExpense } from '../actions';\n\nfunction TableExpend(props) {\n  const { expenses, remove } = props;\n  const tableThead = [\n    'Descrição', 'Tag', 'Método de pagamento', 'Valor', 'Moeda', 'Câmbio utilizado',\n    'Valor convertido', ' Moeda de conversão',\n  ];\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          { tableThead.map((head) => <th scope=\"col\" key={ head }>{ head }</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        { expenses.map((expense) => {\n          const { description,\n            tag, method, value, currency, id, exchangeRates } = expense;\n          const { name, ask } = exchangeRates[currency];\n          const realName = name.split('/');\n          const newAsk = parseFloat(ask).toFixed(2);\n          const coversao = (value * ask).toFixed(2);\n          return (\n            <tr key={ id }>\n              <td>{ description }</td>\n              <td>{ tag }</td>\n              <td>{ method }</td>\n              <td>{ value }</td>\n              <td>{ realName[0] }</td>\n              <td>{ newAsk }</td>\n              <td>{ coversao }</td>\n              <td>Real</td>\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={ () => remove(id) }\n                  data-testid=\"delete-btn\"\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  remove: (id) => dispatch(deleteExpense(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableExpend);\n\n\nTableExpend.propTypes = {\n  expenses: PropTypes.array,\n}.isRequired;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { fetchAPIExpenses } from '../actions';\nimport WalletForm from '../components/FormWallet';\nimport SubmitButton from '../components/SubmitButton';\nimport '../styles/wallet.css';\nimport TableExpend from '../components/TableExpend';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchAPIcoins = this.fetchAPIcoins.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.OnbuttonSubmitExpense = this.OnbuttonSubmitExpense.bind(this);\n    this.sumAllExpenses = this.sumAllExpenses.bind(this);\n    this.state = {\n      coin: [],\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAPIcoins();\n  }\n\n  sumAllExpenses() {\n    const { expenses } = this.props;\n    let result = 0;\n    const arr = [];\n    if (expenses.length === 0) return result;\n    if (expenses.length >= 1) {\n      expenses.map((exp) => arr.push(exp.exchangeRates[exp.currency].ask * exp.value));\n      result = arr.reduce((acc, initial) => acc + initial);\n    }\n    return result.toFixed(2);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  OnbuttonSubmitExpense() {\n    const { buttonSubmitExpense } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    buttonSubmitExpense({ value, description, currency, method, tag });\n    this.setState({\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    });\n  }\n\n  async fetchAPIcoins() {\n    const URL = 'https://economia.awesomeapi.com.br/json/all';\n    const getapi = await fetch(URL);\n    const getjson = await getapi.json();\n    const filteredCoin = Object.keys(getjson);\n    const coin = filteredCoin.filter((c) => !c.includes('USDT'));\n    this.setState({ coin });\n  }\n\n  render() {\n    const { coin, value, description, currency, method, tag } = this.state;\n    const { userEmail } = this.props;\n    return (\n      <div>\n        <nav>\n          <WalletForm\n            coin={ coin }\n            value={ value }\n            description={ description }\n            currency={ currency }\n            handleChange={ this.handleChange }\n            method={ method }\n            tag={ tag }\n          />\n          <SubmitButton OnbuttonSubmitExpense={ this.OnbuttonSubmitExpense } />\n          <TableExpend />\n          <Header userEmail={ userEmail } sumAllExpenses={ this.sumAllExpenses } />\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  buttonSubmitExpense: (expenses) => dispatch(fetchAPIExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  userEmail: PropTypes.string,\n}.isRequired;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/wallet\" component={ Login } />\n        <Route path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    </div>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { EMAIL_ACTION } from '../actions/index';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case EMAIL_ACTION:\n    return action.email;\n  default: return state;\n  }\n};\n\nexport default user;\n","import { EXPENSES, FAIL_EXPENSES, DELETE_EXPENSE } from '../actions/index';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case EXPENSES:\n    return ({ ...state,\n      expenses: [...state.expenses, { id: state.expenses.length, ...action.state }] });\n  case FAIL_EXPENSES:\n    return { ...state, error: 'ERRO' };\n    case DELETE_EXPENSE:\n      return {\n        ...state,\n        expenses: state.expenses.filter(({ id }) => id !== action.state),\n      };\n  default: return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}